* USERS ARE CRASHING ON FIRST RUN AFTER INSTALL

* Adding C:\ as a drive causes excessive memory use during scan.  Can we check
  for system drive?

* Verify is brutally slow because it open/closes every file each time for every block 

* Error messages during update need to be collected and reported the same as
  for recover errors.
  
* No way to re-create parity from scratch.

* Protect against file modifications during updates causing problems by 
  checking last modified times.

* Idea: don't bother with hash check if LastWriteTime has changed, just
  assume the file has been edited.
  
* Handle out-of-parity space issues robustly (should update detect and report 
  when there is not enough room on the parity drive?)
  
* Warning when adding new drives that are already in the array.

* Log file handling (UI vs. command line)

* Need to be able to delete/reset entire backup set

* Need to be able to remove drives from the array

* Bring back command line
 
* File update progress should include time to flush temp parity

* "Ignore files smaller than" option
  
* Recover should check if the destination drive has enough room first.

* Schedule automatic updates

* Test new version message from command line

* Update operations should report MB/sec statistics
  
* Recover should prompt first before overwriting an existing file

* Temporary storage should ALWAYS use tempRAM first and then overflow to disk
  when necessary.

* Look for ways to speed up scans of Music drive

* test what happens when a file is removed that doesn't overlap with any 
  other files (e.g. towards the end of the largest drive.)  Make sure all zeros
  are written to parity in this case.

* update scan should handle case where file attributes only have changed -
  no parity change occurs but the updated attributes should be saved to the meta data
  
* Allow re-organizing drive list using drag-and-drop